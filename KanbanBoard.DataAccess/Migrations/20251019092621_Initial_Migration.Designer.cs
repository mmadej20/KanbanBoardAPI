// <auto-generated />
using System;
using KanbanBoard.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KanbanBoard.DataAccess.Migrations
{
    [DbContext(typeof(KanbanContext))]
    [Migration("20251019092621_Initial_Migration")]
    partial class Initial_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KanbanBoard.DataAccess.Entities.BoardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("KanbanBoard.DataAccess.Entities.BoardItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedMemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BoardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedMemberId");

                    b.HasIndex("BoardId");

                    b.ToTable("BoardItems");
                });

            modelBuilder.Entity("KanbanBoard.DataAccess.Entities.BoardMemberEntity", b =>
                {
                    b.Property<Guid>("BoardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("BoardId", "MemberId");

                    b.HasIndex("MemberId");

                    b.ToTable("BoardMemberEntity");
                });

            modelBuilder.Entity("KanbanBoard.DataAccess.Entities.MemberEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("KanbanBoard.DataAccess.Entities.BoardItemEntity", b =>
                {
                    b.HasOne("KanbanBoard.DataAccess.Entities.MemberEntity", "AssignedMember")
                        .WithMany("BoardItems")
                        .HasForeignKey("AssignedMemberId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("KanbanBoard.DataAccess.Entities.BoardEntity", "Board")
                        .WithMany("BoardItems")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("AssignedMember");

                    b.Navigation("Board");
                });

            modelBuilder.Entity("KanbanBoard.DataAccess.Entities.BoardMemberEntity", b =>
                {
                    b.HasOne("KanbanBoard.DataAccess.Entities.BoardEntity", "Board")
                        .WithMany("BoardMembers")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanbanBoard.DataAccess.Entities.MemberEntity", "Member")
                        .WithMany("BoardMembers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("KanbanBoard.DataAccess.Entities.BoardEntity", b =>
                {
                    b.Navigation("BoardItems");

                    b.Navigation("BoardMembers");
                });

            modelBuilder.Entity("KanbanBoard.DataAccess.Entities.MemberEntity", b =>
                {
                    b.Navigation("BoardItems");

                    b.Navigation("BoardMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
